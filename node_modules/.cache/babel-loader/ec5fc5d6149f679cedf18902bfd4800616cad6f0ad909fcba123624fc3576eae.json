{"ast":null,"code":"var _jsxFileName = \"/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mapa() {\n  _s();\n  useEffect(() => {\n    let email = \"mcovarrubias@uc.cl\";\n    let password = \"18640729\";\n    const payload = {\n      \"type\": \"JOIN\",\n      \"payload\": {\n        \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n      }\n    };\n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(payload));\n    };\n  }, []); // empty dependency array ensures this effect only runs once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Mapa, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Mapa","_s","email","password","payload","btoa","socket","WebSocket","onopen","console","log","send","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nfunction Mapa() {\n\n  useEffect(() => {\n    let email = \"mcovarrubias@uc.cl\";\n    let password = \"18640729\";\n    const payload = {\n        \"type\": \"JOIN\",\n        \"payload\": {\n            \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n        }\n    }\n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(payload));\n      \n    };\n\n    \n    \n  }, []); // empty dependency array ensures this effect only runs once\n\n  return (\n    <div className=\"App\">\n      <h1>WebSocket Example</h1>\n    </div>\n  );\n}\n\nexport default Mapa;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEdJ,SAAS,CAAC,MAAM;IACd,IAAIK,KAAK,GAAG,oBAAoB;IAChC,IAAIC,QAAQ,GAAG,UAAU;IACzB,MAAMC,OAAO,GAAG;MACZ,MAAM,EAAE,MAAM;MACd,SAAS,EAAE;QACP,eAAe,EAAG,SAAQC,IAAI,CAAE,GAAEH,KAAM,IAAGC,QAAS,EAAC,CAAE;MAC3D;IACJ,CAAC;IACD,MAAMG,MAAM,GAAG,IAAIC,SAAS,CAAC,yDAAyD,CAAC,CAAC,CAAC;IACzFD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChDJ,MAAM,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAACT,OAAO,CAAC,CAAC;IAEtC,CAAC;EAIH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBhB,OAAA;MAAAgB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtB;AAEV;AAAClB,EAAA,CA3BQD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA6Bb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}