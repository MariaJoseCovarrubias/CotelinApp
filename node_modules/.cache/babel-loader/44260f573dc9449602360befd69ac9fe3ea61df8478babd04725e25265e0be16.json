{"ast":null,"code":"var _jsxFileName = \"/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n};\nconst redIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nvar map = L.map('mapContainer').setView([-33.35, -70.5], 10);\nL.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\nfunction Mapa() {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [destinations, setDestinations] = useState([]);\n  useEffect(() => {\n    // Initialize the UI.\n\n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(infopay));\n      socket.addEventListener(\"message\", _ref => {\n        let {\n          data\n        } = _ref;\n        const event = JSON.parse(data);\n        console.log(event);\n        if (event.type === \"RESTAURANTS\") {\n          setRestaurants(event.payload);\n          event.payload.forEach(r => {\n            if (!(r.id in restaurants)) {\n              restaurants[r.id] = r;\n              var marker = L.marker([r.position.lat, r.position.long]);\n              marker.bindTooltip(r.name);\n              marker.addTo(map);\n              r.marker = marker;\n            }\n          });\n        } else if (event.type === \"DESTINATIONS\") {\n          event.payload.forEach(d => {\n            setDestinations(event.payload);\n            if (!(d.id in destinations)) {\n              destinations[d.id] = d;\n              var marker = L.marker([d.position.lat, d.position.long], {\n                icon: redIcon\n              });\n              marker.bindTooltip(d.name);\n              marker.addTo(map);\n              d.marker = marker;\n            }\n          });\n        }\n      });\n    };\n  }, [restaurants, destinations, map]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [-33.35, -70.5],\n    zoom: 13,\n    scrollWheelZoom: true,\n    style: {\n      height: '400px'\n    },\n    whenCreated: handleMapLoad,\n    children: /*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Mapa, \"rHZ+lVfgKw6iwmz5Kf9ZKLxpHFk=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","email","password","infopay","btoa","redIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","map","setView","tileLayer","addTo","Mapa","_s","restaurants","setRestaurants","destinations","setDestinations","socket","WebSocket","onopen","console","log","send","JSON","stringify","addEventListener","_ref","data","event","parse","type","payload","forEach","r","id","marker","position","lat","long","bindTooltip","name","d","icon","center","zoom","scrollWheelZoom","style","height","whenCreated","handleMapLoad","children","url","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n}\nconst redIcon = new L.Icon({\n    iconUrl:\n      'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl:\n      'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41],\n  });\n\nvar map = L.map('mapContainer').setView([-33.35, -70.5], 10);\nL.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n\nfunction Mapa() {\n    const [restaurants, setRestaurants] = useState([]);\n    const [destinations, setDestinations] = useState([]);\n\n  useEffect(() => {\n    // Initialize the UI.\n    \n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(infopay));\n      socket.addEventListener(\"message\", ({ data })=> {\n        const event = JSON.parse(data);\n        console.log(event);\n        \n        if (event.type === \"RESTAURANTS\") {\n            setRestaurants(event.payload);\n            event.payload.forEach(r => {\n                if (!(r.id in restaurants)) {\n                  restaurants[r.id] = r;\n                  var marker = L.marker([r.position.lat, r.position.long]);\n                  marker.bindTooltip(r.name);\n                  marker.addTo(map);\n                  r.marker = marker;\n                }\n              });\n              \n          \n        } else if (event.type === \"DESTINATIONS\") {\n            event.payload.forEach(d => {\n                setDestinations(event.payload);\n                if (!(d.id in destinations)) {\n                  destinations[d.id] = d;\n                  var marker = L.marker([d.position.lat, d.position.long], {icon: redIcon});\n                  marker.bindTooltip(d.name);\n                  marker.addTo(map);\n                  d.marker = marker;\n                }\n              });\n              \n            }\n      });\n    };\n  }, [restaurants, destinations, map]); \n\n  \n\n  return (\n    <MapContainer center={[-33.35, -70.5]} zoom={13} scrollWheelZoom={true} style={{ height: '400px' }} whenCreated={handleMapLoad}>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n    </MapContainer>\n  );\n}\n\nexport default Mapa;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}