{"ast":null,"code":"var _jsxFileName = \"/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n};\nconst redIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nfunction Mapa() {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [destinations, setDestinations] = useState([]);\n  const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\");\n\n  // Handle incoming messages from the server\n  socket.onmessage = _ref => {\n    let {\n      data\n    } = _ref;\n    const event = JSON.parse(data);\n    console.log(event);\n    if (event.type === \"RESTAURANTS\") {\n      setRestaurants(event.payload);\n    } else if (event.type === \"DESTINATIONS\") {\n      setDestinations(event.payload);\n    }\n  };\n\n  // Add markers for restaurants and destinations\n  const restaurantMarkers = restaurants.map(restaurant => restaurant.lat && restaurant.lng && /*#__PURE__*/_jsxDEV(Marker, {\n    position: [restaurant.lat, restaurant.lng],\n    icon: redIcon,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: restaurant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: restaurant.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, restaurant.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this));\n  const destinationMarkers = destinations.map(destination => destination.lat && destination.lng && /*#__PURE__*/_jsxDEV(Marker, {\n    position: [destination.lat, destination.lng],\n    icon: redIcon,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: destination.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: destination.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, destination.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [-33.35, -70.5],\n    zoom: 13,\n    scrollWheelZoom: true,\n    style: {\n      height: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), restaurantMarkers, destinationMarkers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Mapa, \"4RG4s61Np2DjEssgWZJd+aht4g8=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","email","password","infopay","btoa","redIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","Mapa","_s","restaurants","setRestaurants","destinations","setDestinations","socket","WebSocket","onmessage","_ref","data","event","JSON","parse","console","log","type","payload","restaurantMarkers","map","restaurant","lat","lng","position","icon","children","name","fileName","_jsxFileName","lineNumber","columnNumber","description","id","destinationMarkers","destination","address","center","zoom","scrollWheelZoom","style","height","url","_c","$RefreshReg$"],"sources":["/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n};\nconst redIcon = new L.Icon({\n    iconUrl:\n      'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl:\n      'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41],\n});\n\nfunction Mapa() {\n  const [restaurants, setRestaurants] = useState([]);\n  const [destinations, setDestinations] = useState([]);\n\n  const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\");\n\n  // Handle incoming messages from the server\n  socket.onmessage = ({ data }) => {\n    const event = JSON.parse(data);\n    console.log(event);\n\n    if (event.type === \"RESTAURANTS\") {\n      setRestaurants(event.payload);\n    } else if (event.type === \"DESTINATIONS\") {\n      setDestinations(event.payload);\n    }\n  };\n\n  // Add markers for restaurants and destinations\n  const restaurantMarkers = restaurants.map((restaurant) => (\n    restaurant.lat && restaurant.lng &&\n    <Marker key={restaurant.id} position={[restaurant.lat, restaurant.lng]} icon={redIcon}>\n      <Popup>\n        <h3>{restaurant.name}</h3>\n        <p>{restaurant.description}</p>\n      </Popup>\n    </Marker>\n  ));\n\n  const destinationMarkers = destinations.map((destination) => (\n    destination.lat && destination.lng &&\n    <Marker key={destination.id} position={[destination.lat, destination.lng]} icon={redIcon}>\n      <Popup>\n        <h3>{destination.name}</h3>\n        <p>{destination.address}</p>\n      </Popup>\n    </Marker>\n  ));\n\n  return (\n    <MapContainer center={[-33.35, -70.5]} zoom={13} scrollWheelZoom={true} style={{ height: '400px' }}>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n      {restaurantMarkers}\n      {destinationMarkers}\n    </MapContainer>\n  );\n}\n\nexport default Mapa;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}