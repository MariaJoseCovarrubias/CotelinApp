{"ast":null,"code":"var _jsxFileName = \"/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n};\nconst redIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nfunction Mapa() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [restaurants, setRestaurants] = useState([]);\n  const [destinations, setDestinations] = useState([]);\n  useEffect(() => {\n    // Initialize the UI.\n    const newMap = L.map('mapContainer').setView([-33.35, -70.5], 10);\n    setMap(newMap);\n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(infopay));\n      socket.addEventListener(\"message\", _ref => {\n        let {\n          data\n        } = _ref;\n        const event = JSON.parse(data);\n        console.log(event);\n        if (event.type === \"RESTAURANTS\") {\n          setRestaurants(event.payload);\n          event.payload.forEach(r => {\n            if (!(r.id in restaurants)) {\n              restaurants[r.id] = r;\n              var marker = L.marker([r.position.lat, r.position.long]);\n              marker.bindTooltip(r.name);\n              marker.addTo(map);\n              r.marker = marker;\n            }\n          });\n        } else if (event.type === \"DESTINATIONS\") {\n          event.payload.forEach(d => {\n            setDestinations(event.payload);\n            if (!(d.id in destinations)) {\n              destinations[d.id] = d;\n              var marker = L.marker([d.position.lat, d.position.long], {\n                icon: redIcon\n              });\n              marker.bindTooltip(d.name);\n              marker.addTo(map);\n              d.marker = marker;\n            }\n          });\n        }\n      });\n    };\n  }, [restaurants, destinations, map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mapContainer\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [-33.35, -70.5],\n      zoom: 10,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), restaurants.map(r => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [r.position.lat, r.position.long],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: r.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, r.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), destinations.map(d => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [d.position.lat, d.position.long],\n        icon: redIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: d.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, d.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Mapa, \"SW5VYxq4dMsxI34cDlg8KfnTj90=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","email","password","infopay","btoa","redIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","Mapa","_s","map","setMap","restaurants","setRestaurants","destinations","setDestinations","newMap","setView","socket","WebSocket","onopen","console","log","send","JSON","stringify","addEventListener","_ref","data","event","parse","type","payload","forEach","r","id","marker","position","lat","long","bindTooltip","name","addTo","d","icon","children","center","zoom","url","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n}\nconst redIcon = new L.Icon({\n    iconUrl:\n      'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl:\n      'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41],\n  });\n\n\nfunction Mapa() {\n    const [map, setMap] = useState(null);\n    const [restaurants, setRestaurants] = useState([]);\n    const [destinations, setDestinations] = useState([]);\n\n  useEffect(() => {\n    // Initialize the UI.\n    const newMap = L.map('mapContainer').setView([-33.35, -70.5], 10);\n    setMap(newMap);\n\n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(infopay));\n      socket.addEventListener(\"message\", ({ data })=> {\n        const event = JSON.parse(data);\n        console.log(event);\n        \n        if (event.type === \"RESTAURANTS\") {\n            setRestaurants(event.payload);\n            event.payload.forEach(r => {\n                if (!(r.id in restaurants)) {\n                  restaurants[r.id] = r;\n                  var marker = L.marker([r.position.lat, r.position.long]);\n                  marker.bindTooltip(r.name);\n                  marker.addTo(map);\n                  r.marker = marker;\n                }\n              });\n              \n          \n        } else if (event.type === \"DESTINATIONS\") {\n            event.payload.forEach(d => {\n                setDestinations(event.payload);\n                if (!(d.id in destinations)) {\n                  destinations[d.id] = d;\n                  var marker = L.marker([d.position.lat, d.position.long], {icon: redIcon});\n                  marker.bindTooltip(d.name);\n                  marker.addTo(map);\n                  d.marker = marker;\n                }\n              });\n              \n            }\n      });\n    };\n  }, [restaurants, destinations, map]); \n\n  \n\n  return (\n    <div id=\"mapContainer\">\n      <MapContainer center={[-33.35, -70.5]} zoom={10}>\n        <TileLayer url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n        {restaurants.map(r => (\n          <Marker key={r.id} position={[r.position.lat, r.position.long]}>\n            <Popup>{r.name}</Popup>\n          </Marker>\n        ))}\n        {destinations.map(d => (\n          <Marker key={d.id} position={[d.position.lat, d.position.long]} icon={redIcon}>\n            <Popup>{d.name}</Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n\n  );\n}\n\nexport default Mapa;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}