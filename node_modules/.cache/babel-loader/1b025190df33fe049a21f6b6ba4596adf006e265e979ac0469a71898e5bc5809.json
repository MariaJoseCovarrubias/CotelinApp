{"ast":null,"code":"var _jsxFileName = \"/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n};\nconst redIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nfunction Mapa() {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [destinations, setDestinations] = useState([]);\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    // Initialize the UI.\n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(infopay));\n      socket.addEventListener(\"message\", _ref => {\n        let {\n          data\n        } = _ref;\n        const event = JSON.parse(data);\n        console.log(event);\n        if (event.type === \"RESTAURANTS\") {\n          setRestaurants(event.payload);\n        } else if (event.type === \"DESTINATIONS\") {\n          setDestinations(event.payload);\n        }\n      });\n    };\n  }, []); // empty dependency array ensures this effect only runs once\n\n  useEffect(() => {\n    if (map) {\n      // add markers for restaurants\n      restaurants.map(restaurant => {\n        const marker = L.marker([restaurant.lat, restaurant.lng], {\n          icon: redIcon\n        });\n        marker.bindPopup(`<h3>${restaurant.name}</h3><p>${restaurant.description}</p>`);\n        marker.addTo(map);\n        return marker;\n      });\n\n      // add markers for destinations\n      destinations.map(destination => {\n        const marker = L.marker([destination.lat, destination.lng], {\n          icon: redIcon\n        });\n        marker.bindPopup(`<h3>${destination.name}</h3><p>${destination.address}</p>`);\n        marker.addTo(map);\n        return marker;\n      });\n    }\n  }, [map, restaurants, destinations]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [-33.35, -70.5],\n    zoom: 13,\n    scrollWheelZoom: false,\n    style: {\n      height: '400px'\n    },\n    whenCreated: setMap,\n    children: /*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Mapa, \"VFN2K1aZF8bokrVime526+5HZUQ=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","email","password","infopay","btoa","redIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","Mapa","_s","restaurants","setRestaurants","destinations","setDestinations","map","setMap","socket","WebSocket","onopen","console","log","send","JSON","stringify","addEventListener","_ref","data","event","parse","type","payload","restaurant","marker","lat","lng","icon","bindPopup","name","description","addTo","destination","address","center","zoom","scrollWheelZoom","style","height","whenCreated","children","url","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n}\n\nconst redIcon = new L.Icon({\n  iconUrl:\n    'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n});\n\nfunction Mapa() {\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [destinations, setDestinations] = useState([]);\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    // Initialize the UI.\n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(infopay));\n      socket.addEventListener(\"message\", ({ data }) => {\n        const event = JSON.parse(data);\n        console.log(event);\n        if (event.type === \"RESTAURANTS\") {\n          setRestaurants(event.payload);\n        } else if (event.type === \"DESTINATIONS\") {\n          setDestinations(event.payload);\n        }\n      });\n    };\n  }, []); // empty dependency array ensures this effect only runs once\n\n  useEffect(() => {\n    if (map) {\n      // add markers for restaurants\n      restaurants.map((restaurant) => {\n        const marker = L.marker([restaurant.lat, restaurant.lng], { icon: redIcon });\n        marker.bindPopup(`<h3>${restaurant.name}</h3><p>${restaurant.description}</p>`);\n        marker.addTo(map);\n        return marker;\n      });\n\n      // add markers for destinations\n      destinations.map((destination) => {\n        const marker = L.marker([destination.lat, destination.lng], { icon: redIcon });\n        marker.bindPopup(`<h3>${destination.name}</h3><p>${destination.address}</p>`);\n        marker.addTo(map);\n        return marker;\n      });\n    }\n  }, [map, restaurants, destinations]);\n\n  return (\n    <MapContainer center={[-33.35, -70.5]} zoom={13} scrollWheelZoom={false} style={{ height: '400px' }} whenCreated={setMap}>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n    </MapContainer>\n  );\n}\n\nexport default Mapa;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}