{"ast":null,"code":"var _jsxFileName = \"/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n};\nconst redIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nfunction Mapa() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [restaurants, setRestaurants] = useState([]);\n  const [destinations, setDestinations] = useState([]);\n  useEffect(() => {\n    // Initialize the UI.\n\n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(infopay));\n      socket.addEventListener(\"message\", _ref => {\n        let {\n          data\n        } = _ref;\n        const event = JSON.parse(data);\n        console.log(event);\n        if (event.type === \"RESTAURANTS\") {\n          setRestaurants(event.payload);\n        } else if (event.type === \"DESTINATIONS\") {\n          setDestinations(event.payload);\n        }\n      });\n    };\n  }, []); // empty dependency array ensures this effect only runs once\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [-33.35, -70.5],\n    zoom: 13,\n    scrollWheelZoom: true,\n    style: {\n      height: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), restaurants.map(restaurant =>\n    // Check if latitude and longitude values are defined before creating marker\n    restaurant.lat && restaurant.lng && /*#__PURE__*/_jsxDEV(Marker, {\n      position: [restaurant.lat, restaurant.lng],\n      icon: redIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: restaurant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: restaurant.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, restaurant.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this)), destinations.map(destination =>\n    // Check if latitude and longitude values are defined before creating marker\n    destination.lat && destination.lng && /*#__PURE__*/_jsxDEV(Marker, {\n      position: [destination.lat, destination.lng],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: destination.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: destination.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)\n    }, destination.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Mapa, \"SW5VYxq4dMsxI34cDlg8KfnTj90=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","email","password","infopay","btoa","redIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","Mapa","_s","map","setMap","restaurants","setRestaurants","destinations","setDestinations","socket","WebSocket","onopen","console","log","send","JSON","stringify","addEventListener","_ref","data","event","parse","type","payload","center","zoom","scrollWheelZoom","style","height","children","url","fileName","_jsxFileName","lineNumber","columnNumber","restaurant","lat","lng","position","icon","name","description","id","destination","address","_c","$RefreshReg$"],"sources":["/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n}\nconst redIcon = new L.Icon({\n    iconUrl:\n      'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl:\n      'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41],\n  });\n\nfunction Mapa() {\n    const [map, setMap] = useState(null);\n    const [restaurants, setRestaurants] = useState([]);\n    const [destinations, setDestinations] = useState([]);\n\n  useEffect(() => {\n    // Initialize the UI.\n    \n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(infopay));\n      socket.addEventListener(\"message\", ({ data })=> {\n        const event = JSON.parse(data);\n        console.log(event);\n        \n        if (event.type === \"RESTAURANTS\") {\n          setRestaurants(event.payload);\n          \n        } else if (event.type === \"DESTINATIONS\") {\n          setDestinations(event.payload);\n        }\n      });\n    };\n  }, []); // empty dependency array ensures this effect only runs once\n\n  return (\n    <MapContainer center={[-33.35, -70.5]} zoom={13} scrollWheelZoom={true} style={{ height: '400px' }}>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n      {restaurants.map((restaurant) => (\n  // Check if latitude and longitude values are defined before creating marker\n  (restaurant.lat && restaurant.lng) &&\n  <Marker key={restaurant.id} position={[restaurant.lat, restaurant.lng]} icon={redIcon}>\n    <Popup>\n      <h3>{restaurant.name}</h3>\n      <p>{restaurant.description}</p>\n    </Popup>\n  </Marker>\n))}\n{destinations.map((destination) => (\n  // Check if latitude and longitude values are defined before creating marker\n  (destination.lat && destination.lng) &&\n  <Marker key={destination.id} position={[destination.lat, destination.lng]}>\n    <Popup>\n      <h3>{destination.name}</h3>\n      <p>{destination.address}</p>\n    </Popup>\n  </Marker>\n))}\n    </MapContainer>\n  );\n}\n\nexport default Mapa;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}