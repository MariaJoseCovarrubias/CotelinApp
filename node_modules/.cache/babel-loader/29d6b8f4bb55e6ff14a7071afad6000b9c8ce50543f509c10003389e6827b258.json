{"ast":null,"code":"var _jsxFileName = \"/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n};\nconst redIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nfunction Mapa() {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [destinations, setDestinations] = useState([]);\n  useEffect(() => {\n    // Initialize the UI.\n\n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(infopay));\n      socket.addEventListener(\"message\", _ref => {\n        let {\n          data\n        } = _ref;\n        const event = JSON.parse(data);\n        console.log(event);\n        if (event.type === \"RESTAURANTS\") {\n          setRestaurants(event.payload);\n        } else if (event.type === \"DESTINATIONS\") {\n          setDestinations(event.payload);\n        }\n      });\n    };\n    socket.onmessage = event => {\n      setMessages([...messages, event.data]);\n    };\n    socket.onclose = () => {\n      console.log(\"WebSocket closed\");\n    };\n    socket.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n    };\n    return () => {\n      socket.close();\n    };\n  }, []); // empty dependency array ensures this effect only runs once\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [-33.35, -70.5],\n    zoom: 13,\n    scrollWheelZoom: true,\n    style: {\n      height: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), restaurants.map(restaurant =>\n    // Check if latitude and longitude values are defined before creating marker\n    restaurant.position.lat && restaurant.position.long && /*#__PURE__*/_jsxDEV(Marker, {\n      position: [restaurant.position.lat, restaurant.position.long],\n      icon: redIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: restaurant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, restaurant.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this)), destinations.map(destination =>\n    // Check if latitude and longitude values are defined before creating marker\n    destination.lat && destination.lng && /*#__PURE__*/_jsxDEV(Marker, {\n      position: [destination.lat, destination.long],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: destination.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: destination.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)\n    }, destination.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Mapa, \"jqW0sIkRZ+QV5ye4FSw7+DaqBQ4=\");\n_c = Mapa;\nexport default Mapa;\nvar _c;\n$RefreshReg$(_c, \"Mapa\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","email","password","infopay","btoa","redIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","Mapa","_s","restaurants","setRestaurants","messages","setMessages","destinations","setDestinations","socket","WebSocket","onopen","console","log","send","JSON","stringify","addEventListener","_ref","data","event","parse","type","payload","onmessage","onclose","onerror","error","close","center","zoom","scrollWheelZoom","style","height","children","url","fileName","_jsxFileName","lineNumber","columnNumber","map","restaurant","position","lat","long","icon","name","id","destination","lng","address","_c","$RefreshReg$"],"sources":["/Users/cotelina/Desktop/CotelinApp/src/Mapa.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nlet email = \"mcovarrubias@uc.cl\";\nlet password = \"18640729\";\nconst infopay = {\n  \"type\": \"JOIN\",\n  \"payload\": {\n    \"authorization\": `Basic ${btoa(`${email}:${password}`)}`\n  }\n}\nconst redIcon = new L.Icon({\n    iconUrl:\n      'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl:\n      'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41],\n  });\n\nfunction Mapa() {\n    const [restaurants, setRestaurants] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [destinations, setDestinations] = useState([]);\n\n  useEffect(() => {\n    // Initialize the UI.\n    \n    const socket = new WebSocket(\"wss://tarea2-2023-1-dev-z2fqxmm2ja-uc.a.run.app/connect\"); // replace with your server's URL\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n      socket.send(JSON.stringify(infopay));\n      socket.addEventListener(\"message\", ({ data })=> {\n        const event = JSON.parse(data);\n        console.log(event);\n        \n        if (event.type === \"RESTAURANTS\") {\n          setRestaurants(event.payload);\n          \n        } else if (event.type === \"DESTINATIONS\") {\n          setDestinations(event.payload);\n        }\n      });\n    };\n\n    socket.onmessage = (event) => {\n        setMessages([...messages, event.data]);\n      };\n  \n      socket.onclose = () => {\n        console.log(\"WebSocket closed\");\n      };\n  \n      socket.onerror = (error) => {\n        console.error(\"WebSocket error:\", error);\n      };\n  \n      return () => {\n        socket.close();\n      };\n  }, []); // empty dependency array ensures this effect only runs once\n\n  return (\n    <MapContainer center={[-33.35, -70.5]} zoom={13} scrollWheelZoom={true} style={{ height: '400px' }}>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n      {restaurants.map((restaurant) => (\n  // Check if latitude and longitude values are defined before creating marker\n  (restaurant.position.lat && restaurant.position.long) &&\n  <Marker key={restaurant.id} position={[restaurant.position.lat, restaurant.position.long]} icon={redIcon}>\n    <Popup>\n      <h3>{restaurant.name}</h3>\n    </Popup>\n  </Marker>\n))}\n{destinations.map((destination) => (\n  // Check if latitude and longitude values are defined before creating marker\n  (destination.lat && destination.lng) &&\n  <Marker key={destination.id} position={[destination.lat, destination.long]}>\n    <Popup>\n      <h3>{destination.name}</h3>\n      <p>{destination.address}</p>\n    </Popup>\n  </Marker>\n))}\n    </MapContainer>\n  );\n}\n\nexport default Mapa;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}